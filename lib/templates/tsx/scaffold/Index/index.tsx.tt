import { Routes } from "@/lib"
import { usePageProps } from "@/lib/hooks"
import { Menu, Page, Title } from "@/components"
import { NewIcon } from "@/components/Icons"
import { IndexTableTemplate } from "@/features"
import <%= plural_table_name.camelize %>Table from "@/features/<%= plural_table_name %>/Table"

interface <%= singular_table_name.camelize %>IndexProps {
	<%= plural_table_name %>: Schema.<%= plural_table_name.camelize %>Index[]
	pagination: Schema.Pagination
}

const <%= plural_table_name.camelize %>Index = ({ <%= plural_table_name %>, pagination }: <%= singular_table_name.camelize %>IndexProps) => {
	// copy @route above into the generic type assertion below
	const { params } = usePageProps<"">()
	const title = "<%= human_name.titleize %>"

	return (
		<Page
			title={ title }
			siteTitle={ <>
				<Title>{ title }</Title>
				<Menu>
					<Menu.Link href={ Routes.new<%= singular_table_name.camelize %>() } icon={ <NewIcon /> }>
						New <%= human_name.titleize %>
					</Menu.Link>
				</Menu>
			</> }
		>
		<IndexTableTemplate
			title="<%= plural_table_name.camelize %>"
			model="<%= plural_table_name %>"
			rows={ <%= plural_table_name %> }
			pagination={ pagination }
			contextMenu={ 
				[
					{ 
						label: "New <%= human_name.titleize %>", 
						href: Routes.new<%= singular_table_name.camelize %>(), 
						icon: NewIcon,
						deleteRoute: Routes.<%= plural_table_name.camelize(:lower) %>(),
					},
				]
			}
		>
			<<%= plural_table_name.camelize %>Table />
		</IndexTableTemplate>
		</Page>
	)
}

export default <%= plural_table_name.camelize %>Index
