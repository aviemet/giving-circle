import { Group, Menu, Page, Section, Title } from "@/components"
import { Routes } from "@/lib"
import { usePageProps } from "@/lib/hooks"

interface Show<%= singular_table_name.camelize %>Props {
	<%= singular_table_name %>: Schema.<%= plural_table_name.camelize %>Show
}

const Show<%= singular_table_name.camelize %> = ({ <%= singular_table_name %> }: Show<%= singular_table_name.camelize %>Props) => {
	// copy @route above into the generic type assertion below
	const { params } = usePageProps<"">()
	const title = <%= attributes.include?(:name) ? "#{singular_table_name}.name || " : "" %> "<%= singular_table_name.camelize %>"

	return (
		<Page 
			title={ title }
			heading={ 
				<Group position="apart">
					<Title>{ title }</Title>
					<Menu position="bottom-end">
						<Menu.Target />
						<Menu.Dropdown>
							<Menu.Link href={ Routes.edit<%= singular_table_name.camelize %>(<%= singular_table_name %><%= attributes.include?(:slug) ? ".slug" : ".id" %>) }>
								Edit <%= singular_table_name.camelize %>
							</Menu.Link>
						</Menu.Dropdown>
					</Menu>
				</Group>
			}
			breadcrumbs={ [
				{ title: "<%= human_name.titleize %>", href: Routes.<%= plural_table_name.camelize(:lower) %>() },
				{ title, href: window.location.href },
			] }
		>
			<Section>

			</Section>
		</Page>
	)
}

export default Show<%= singular_table_name.camelize %>
