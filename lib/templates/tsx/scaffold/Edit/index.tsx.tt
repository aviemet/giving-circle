import { Page, Section } from "@/components"
import { Routes } from "@/lib"
import { usePageProps } from "@/lib/hooks"
import <%= singular_table_name.camelize %>Form from "@/features/<%= plural_table_name %>/Form"

interface Edit<%= singular_table_name.camelize %>Props {
	<%= singular_table_name %>: Schema.<%= plural_table_name.camelize %>Edit
}

const Edit<%= singular_table_name.camelize %> = ({ <%= singular_table_name %> }: Edit<%= singular_table_name.camelize %>Props) => {
	// copy @route above into the generic type assertion below
	const { params } = usePageProps<"">()
	const title = "Edit <%= human_name.titleize %>"

	return (
		<Page 
			title={ title }
			breadcrumbs={ [
				{ title: "<%= human_name.pluralize.titleize %>", href: Routes.<%= plural_table_name.camelize(:lower) %>() },
				{ title: <%= attributes.include?(:name) ? "#{singular_table_name}.name" : "\"#{singular_table_name.camelize}\"" %>, href: Routes.<%= singular_table_name.camelize(:lower) %>(<%= singular_table_name %><%= attributes.include?(:slug) ? ".slug" : ".id" %>) },
				{ title, href: window.location.href },
			] }
		>
			<Section>				
				<<%= singular_table_name.camelize %>Form
					method="put"
					to={ Routes.<%= singular_table_name.camelize(:lower) %>() }
					<%= singular_table_name %>={ <%= singular_table_name %> }
				/>
			</Section>
		</Page>
	)
}

export default Edit<%= singular_table_name.camelize %>
