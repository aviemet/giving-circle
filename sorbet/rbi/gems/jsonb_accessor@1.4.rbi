# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `jsonb_accessor` gem.
# Please instead update this file by running `bin/tapioca gem jsonb_accessor`.

class ActiveRecord::Base
  include ::ActiveModel::Access
  include ::ActiveModel::ForbiddenAttributesProtection
  include ::ActiveModel::AttributeAssignment
  include ::ActiveModel::Serialization
  include ::JsonbAccessor::Macro
  include ::JsonbAccessor
  include ::JsonbAccessor::QueryBuilder
  extend ::JsonbAccessor::Macro::ClassMethods
end

# source://jsonb_accessor//lib/jsonb_accessor/version.rb#3
module JsonbAccessor
  include ::JsonbAccessor::Macro
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::JsonbAccessor::Macro::ClassMethods

  class << self
    # @return [Boolean]
    #
    # source://jsonb_accessor//lib/jsonb_accessor/version.rb#6
    def enum_support?; end
  end
end

# source://jsonb_accessor//lib/jsonb_accessor/attribute_query_methods.rb#4
class JsonbAccessor::AttributeQueryMethods
  # @return [AttributeQueryMethods] a new instance of AttributeQueryMethods
  #
  # source://jsonb_accessor//lib/jsonb_accessor/attribute_query_methods.rb#5
  def initialize(klass); end

  # source://jsonb_accessor//lib/jsonb_accessor/attribute_query_methods.rb#9
  def define(store_key_mapping_method_name, jsonb_attribute); end

  private

  # Returns the value of attribute klass.
  #
  # source://jsonb_accessor//lib/jsonb_accessor/attribute_query_methods.rb#40
  def klass; end
end

# source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#4
module JsonbAccessor::Helpers
  private

  # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#7
  def active_record_default_timezone; end

  # Replaces all keys in `attributes` that have a defined store_key with the store_key
  #
  # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#12
  def convert_keys_to_store_keys(attributes, store_key_mapping); end

  # Replaces all keys in `attributes` that have a defined store_key with the named key (alias)
  #
  # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#19
  def convert_store_keys_to_keys(attributes, store_key_mapping); end

  # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#23
  def deserialize_value(value, attribute_type); end

  # Parse datetime based on the configured default_timezone
  #
  # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#38
  def parse_date(datetime); end

  class << self
    # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#7
    def active_record_default_timezone; end

    # Replaces all keys in `attributes` that have a defined store_key with the store_key
    #
    # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#12
    def convert_keys_to_store_keys(attributes, store_key_mapping); end

    # Replaces all keys in `attributes` that have a defined store_key with the named key (alias)
    #
    # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#19
    def convert_store_keys_to_keys(attributes, store_key_mapping); end

    # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#23
    def deserialize_value(value, attribute_type); end

    # Parse datetime based on the configured default_timezone
    #
    # source://jsonb_accessor//lib/jsonb_accessor/helpers.rb#38
    def parse_date(datetime); end
  end
end

# source://jsonb_accessor//lib/jsonb_accessor/macro.rb#4
module JsonbAccessor::Macro; end

# source://jsonb_accessor//lib/jsonb_accessor/macro.rb#5
module JsonbAccessor::Macro::ClassMethods
  # source://jsonb_accessor//lib/jsonb_accessor/macro.rb#6
  def jsonb_accessor(jsonb_attribute, field_types); end
end

# source://jsonb_accessor//lib/jsonb_accessor/query_builder.rb#4
module JsonbAccessor::QueryBuilder
  extend ::ActiveSupport::Concern
end

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#4
module JsonbAccessor::QueryHelper
  class << self
    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#68
    def convert_number_ranges(attributes); end

    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#96
    def convert_ranges(attributes); end

    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#82
    def convert_time_ranges(attributes); end

    # @return [Boolean]
    #
    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#60
    def number_query_arguments?(arg); end

    # @return [Boolean]
    #
    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#64
    def time_query_arguments?(arg); end

    # @raise [InvalidColumnName]
    #
    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#44
    def validate_column_name!(query, column_name); end

    # @raise [InvalidDirection]
    #
    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#56
    def validate_direction!(option); end

    # source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#48
    def validate_field_name!(query, column_name, field_name); end
  end
end

# Constants
#
# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#12
JsonbAccessor::QueryHelper::GREATER_THAN = T.let(T.unsafe(nil), String)

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#13
JsonbAccessor::QueryHelper::GREATER_THAN_OR_EQUAL_TO = T.let(T.unsafe(nil), String)

# Errors
#
# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#6
class JsonbAccessor::QueryHelper::InvalidColumnName < ::StandardError; end

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#8
class JsonbAccessor::QueryHelper::InvalidDirection < ::StandardError; end

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#7
class JsonbAccessor::QueryHelper::InvalidFieldName < ::StandardError; end

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#14
JsonbAccessor::QueryHelper::LESS_THAN = T.let(T.unsafe(nil), String)

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#15
JsonbAccessor::QueryHelper::LESS_THAN_OR_EQUAL_TO = T.let(T.unsafe(nil), String)

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#32
JsonbAccessor::QueryHelper::NUMBER_OPERATORS = T.let(T.unsafe(nil), Array)

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#17
JsonbAccessor::QueryHelper::NUMBER_OPERATORS_MAP = T.let(T.unsafe(nil), Hash)

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#9
class JsonbAccessor::QueryHelper::NotSupported < ::StandardError; end

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#41
JsonbAccessor::QueryHelper::ORDER_DIRECTIONS = T.let(T.unsafe(nil), Array)

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#39
JsonbAccessor::QueryHelper::TIME_OPERATORS = T.let(T.unsafe(nil), Array)

# source://jsonb_accessor//lib/jsonb_accessor/query_helper.rb#34
JsonbAccessor::QueryHelper::TIME_OPERATORS_MAP = T.let(T.unsafe(nil), Hash)

# source://jsonb_accessor//lib/jsonb_accessor/version.rb#4
JsonbAccessor::VERSION = T.let(T.unsafe(nil), String)
