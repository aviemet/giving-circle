# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `generator_spec` gem.
# Please instead update this file by running `bin/tapioca gem generator_spec`.

# source://generator_spec//lib/generator_spec/matcher.rb#1
module GeneratorSpec; end

# source://generator_spec//lib/generator_spec/generator_example_group.rb#3
module GeneratorSpec::GeneratorExampleGroup
  extend ::ActiveSupport::Concern
  include ::GeneratorSpec::TestCase

  mixes_in_class_methods ::GeneratorSpec::TestCase::ClassMethods
end

# source://generator_spec//lib/generator_spec/matcher.rb#2
module GeneratorSpec::Matcher
  # @raise [RuntimeError]
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#133
  def have_structure(&block); end
end

# source://generator_spec//lib/generator_spec/matcher.rb#61
class GeneratorSpec::Matcher::Directory
  # @return [Directory] a new instance of Directory
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#64
  def initialize(root = T.unsafe(nil), &block); end

  # source://generator_spec//lib/generator_spec/matcher.rb#71
  def directory(name, &block); end

  # source://generator_spec//lib/generator_spec/matcher.rb#75
  def file(name, &block); end

  # source://generator_spec//lib/generator_spec/matcher.rb#83
  def location(name); end

  # @return [Boolean]
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#91
  def matches?(root); end

  # source://generator_spec//lib/generator_spec/matcher.rb#87
  def migration(name, &block); end

  # source://generator_spec//lib/generator_spec/matcher.rb#79
  def no_file(name); end

  # Returns the value of attribute tree.
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#62
  def tree; end
end

# Taken (with permission) from beard by Yahuda Katz
# https://github.com/carlhuda/beard
#
# source://generator_spec//lib/generator_spec/matcher.rb#6
class GeneratorSpec::Matcher::File
  # @return [File] a new instance of File
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#7
  def initialize(name, &block); end

  # source://generator_spec//lib/generator_spec/matcher.rb#16
  def contains(text); end

  # @return [Boolean]
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#20
  def matches?(root); end

  protected

  # source://generator_spec//lib/generator_spec/matcher.rb#30
  def check_contents(file); end
end

# source://generator_spec//lib/generator_spec/matcher.rb#41
class GeneratorSpec::Matcher::Migration < ::GeneratorSpec::Matcher::File
  # @return [Boolean]
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#42
  def matches?(root); end

  protected

  # source://generator_spec//lib/generator_spec/matcher.rb#54
  def migration_file_name(root, name); end
end

# source://generator_spec//lib/generator_spec/matcher.rb#112
class GeneratorSpec::Matcher::Root < ::GeneratorSpec::Matcher::Directory
  # source://generator_spec//lib/generator_spec/matcher.rb#113
  def failure_message; end

  # @return [Boolean]
  #
  # source://generator_spec//lib/generator_spec/matcher.rb#123
  def matches?(root); end
end

# source://generator_spec//lib/generator_spec/test_case.rb#6
module GeneratorSpec::TestCase
  include ::GeneratorSpec::Matcher
  include ::FileUtils::StreamUtils_
  include ::FileUtils
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::GeneratorSpec::TestCase::ClassMethods

  # source://generator_spec//lib/generator_spec/test_case.rb#36
  def method_missing(method_sym, *arguments, &block); end

  # @return [Boolean]
  #
  # source://generator_spec//lib/generator_spec/test_case.rb#40
  def respond_to?(method_sym, include_private = T.unsafe(nil)); end
end

# source://generator_spec//lib/generator_spec/test_case.rb#22
module GeneratorSpec::TestCase::ClassMethods
  # source://generator_spec//lib/generator_spec/test_case.rb#27
  def arguments(array); end

  # source://generator_spec//lib/generator_spec/test_case.rb#31
  def destination(path); end

  # source://generator_spec//lib/generator_spec/test_case.rb#23
  def tests(klass); end
end
